---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime";
import type { CollectionEntry } from "astro:content";
import { slugifyStr } from "@utils/slugify";
import NewsLetter from "../components/NewsLetter.astro";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const {
  title,
  author,
  description,
  ogImage,
  canonicalURL,
  pubDatetime,
  tags,
  minutesRead,
} = post.data;

const { Content } = await post.render();
const ogUrl = new URL(ogImage ? ogImage : `${title}.png`, Astro.url.origin)
  .href;
---

<Layout
  title={title}
  author={author}
  description={description}
  ogImage={ogUrl}
  canonicalURL={canonicalURL}
  article={{
    publishedTime: pubDatetime?.toISOString(),
    authors: [author],
    tags,
    section: "Technology",
  }}
>
  <Header />

  <main class="mx-auto w-full max-w-3xl px-4 pb-12">
      <Datetime
      datetime={pubDatetime}
      minutesRead={minutesRead}
      size="lg"
      className="my-2"
    />
    <h1 class="md:text-6xl mt-4 text-6xl font-semibold text-skin-accent">{title}</h1>
    <p class="md:text-xl text-lg my-4 text-slate-500">{description}</p>

    <article id="article" role="article" class="[word-spacing:.08em] prose prose-code:font-[monospace] mx-auto mt-20 max-w-3xl">
      <Content />
    </article>


    <ul class="my-8">
      {tags.map(tag => <Tag name={slugifyStr(tag)} />)}
    </ul>
    <NewsLetter  />
<div class="fixed right-4 bottom-4 flex flex-col space-y-4 mb-12  ">
  <!-- <a
      href="#"
      class="filter grayscale flex transform items-center justify-center rounded-md transition duration-200 ease-out hover:-translate-y-1"
    >
      <span class="text-white text-6xl transition duration-200 ease-out"
        >⬆️</span
      >
    </a> -->
    <button id="subscribe-button" class="shadow-xl uppercase bg-blue-700 font-medium flex items-center text-white px-3.5 py-2.5 rounded-full hover:bg-blue-600 focus:outline-none focus:bg-blue-700">
      <svg xmlns="http://www.w3.org/2000/svg" class="fill-white" height="24" viewBox="0 -960 960 960" width="24">
	<path
		d="M160-160q-33 0-56.5-23.5T80-240v-480q0-33 23.5-56.5T160-800h640q33 0 56.5 23.5T880-720v480q0 33-23.5 56.5T800-160H160Zm320-280L160-640v400h640v-400L480-440Zm0-80 320-200H160l320 200ZM160-640v-80 480-400Z" />
</svg>

      <span class="ml-1 hidden sm:block">Subscribe</span>
</button>
    <!-- <button id="share-button" class="uppercase  bg-blue-700 font-medium text-white px-6 py-2.5  rounded-full hover:bg-blue-600 focus:outline-none focus:bg-blue-700">
      <svg xmlns="http://www.w3.org/2000/svg" class="fill-white" height="24" viewBox="0 -960 960 960" width="24"><path d="M720-80q-50 0-85-35t-35-85q0-7 1-14.5t3-13.5L322-392q-17 15-38 23.5t-44 8.5q-50 0-85-35t-35-85q0-50 35-85t85-35q23 0 44 8.5t38 23.5l282-164q-2-6-3-13.5t-1-14.5q0-50 35-85t85-35q50 0 85 35t35 85q0 50-35 85t-85 35q-23 0-44-8.5T638-672L356-508q2 6 3 13.5t1 14.5q0 7-1 14.5t-3 13.5l282 164q17-15 38-23.5t44-8.5q50 0 85 35t35 85q0 50-35 85t-85 35Zm0-640q17 0 28.5-11.5T760-760q0-17-11.5-28.5T720-800q-17 0-28.5 11.5T680-760q0 17 11.5 28.5T720-720ZM240-440q17 0 28.5-11.5T280-480q0-17-11.5-28.5T240-520q-17 0-28.5 11.5T200-480q0 17 11.5 28.5T240-440Zm480 280q17 0 28.5-11.5T760-200q0-17-11.5-28.5T720-240q-17 0-28.5 11.5T680-200q0 17 11.5 28.5T720-160Zm0-600ZM240-480Zm480 280Z"/></svg>
      <span class="ml-2">Share</span>
</button> -->
</div>

    <!-- <script
      src="https://giscus.app/client.js"
      data-repo="ezzabuzaid/blog"
      data-repo-id="R_kgDOKN0loA"
      data-category="General"
      data-category-id="DIC_kwDOKN0loM4CZCjp"
      data-mapping="url"
      data-strict="0"
      data-reactions-enabled="1"
      data-emit-metadata="1"
      data-input-position="top"
      data-theme="preferred_color_scheme"
      data-lang="en"
      data-loading="lazy"
      crossorigin="anonymous"
      async></script> -->
  </main>
  <Footer />
</Layout>

<script define:vars={{title}}>
document.addEventListener("DOMContentLoaded", function() {
  const articleEl = document.getElementById('article');
  articleEl?.querySelectorAll('a').forEach((anchorEl) => {
    const link = (anchorEl.getAttribute('href') ?? '');
    const isOutboundLink = link.startsWith('http') && !link.startsWith(window.location.origin);
    const eventName = isOutboundLink ? 'OutboundLink' : 'InternalLink';
    anchorEl.addEventListener('click', () => {
      console.log(eventName, link);
      window.plausible(eventName, {
        props: {
          href: link,
          blog: title
        }
      });
    });
  });

  document.getElementById('subscribe-button')?.addEventListener('click', () => {
    window.plausible('Subscribe', {
      props: {
        blog: title
      }
    });

    // scroll to newsletter-section
    const newsletterSection = document.getElementById('newsletter-section');
    newsletterSection?.scrollIntoView({ behavior: 'smooth' });
  });
});
</script>
