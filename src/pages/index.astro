---
import Card from "@components/Card";
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import Hr from "@components/Hr.astro";
import LinkButton from "@components/LinkButton.astro";
import Socials from "@components/Socials.astro";
import { SOCIALS } from "@config";
import Layout from "@layouts/Layout.astro";
import getSortedPosts from "@utils/getSortedPosts";
import slugify from "@utils/slugify";

const sortedPosts = await getSortedPosts();
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  <main id="main-content">
    <section id="hero" class="py-6">
      <!-- <h1 class="my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl">Mingalaba</h1>
      <a
        target="_blank"
        href="https://feeds.feedburner.com/techtextdev"
        class="rss-link"
        aria-label="rss feed"
        title="RSS Feed"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
          ><path
            d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
          ></path><path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
          ></path><circle cx="6" cy="18" r="2"></circle>
        </svg>
      </a> -->

      <p>
        Welcome to my blog, where I explore the intricacies of web development.
        Specializing in Angular, TypeScript, compilers, and Node.js, I aim to
        provide you with actionable insights and tutorials. Let's code smarter,
        not harder.
      </p>
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">Social Links:</div>
            <Socials />
          </div>
        )
      }
    </section>

    <footer class="bg-white border-black mb-12 border-b-2">
      <div class="lg:p-20 2xl:px-0 2xl:max-w-7xl mx-auto p-4">
        <div class="h-full space-y-12">
          <div
            class="lg:inline-flex lg:items-start h-full w-full justify-between gap-3"
          >
            <div class="flex flex-col">
              <form
                id="newsletter"
                class="border-black bg-white mt-4 justify-between rounded-2xl border-2 p-2 shadow sm:flex"
              >
                <label class="sr-only" for="email-address">Email address</label>
                <input
                  autocomplete="email"
                  class="border-transparent bg-transparent focus:border-black w-full rounded-xl px-5 py-3 placeholder-black focus:ring-black sm:max-w-xs"
                  id="email-address"
                  name="email"
                  placeholder="Never miss a post!"
                  required=""
                  type="email"
                /><div
                  class="ml-auto mt-3 rounded-md sm:ml-3 sm:mt-0 sm:flex-shrink-0"
                >
                  <button
                    class="border-black bg-black hover:bg-lila-500 hover:text-black text-white flex w-full items-center justify-center rounded-xl border-2 px-5 py-3 text-base font-medium focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2"
                    type="submit"
                    ><svg
                      class="mr-3 h-6 w-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      xmlns="http://www.w3.org/2000/svg"
                      ><path
                        d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"
                        stroke-linecap="round"
                        stroke-linejoin="round"></path></svg
                    > Subscribe for free</button
                  >
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </footer>

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(({ data }) => (
                <Card
                  href={`/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          <Hr />
        </>
      )
    }

    <section id="recent-posts">
      <h2>Recent Posts</h2>
      <ul>
        {
          sortedPosts.map(
            ({ data }, index) =>
              index < 4 && (
                <Card
                  href={`/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              )
          )
        }
      </ul>
      <div class="all-posts-btn-wrapper">
        <LinkButton href="/posts">
          All Posts
          <svg xmlns="http://www.w3.org/2000/svg"
            ><path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
    </section>
  </main>

  <Footer />
</Layout>
<script>
  document
    .getElementById("newsletter")
    ?.addEventListener("submit", function (event) {
      event.preventDefault();
      const formData = new FormData(event.target as any);
      const value = Object.fromEntries(formData.entries());
      console.log(value);
      var myHeaders = new Headers();
      myHeaders.append("Content-Type", "application/json");
      myHeaders.append(
        "Authorization",
        "Bearer 9e4caa6340f52bfaa1ace921f9dd58c2"
      );

      const raw = JSON.stringify({
        project: "faslh",
        channel: "newsletter",
        event: "User Joined",
        description: `Email: ${value.email}`,
        icon: "ðŸŽ‰",
        tags: {
          email: value.email,
        },
        notify: true,
      });

      const requestOptions: RequestInit = {
        method: "POST",
        headers: myHeaders,
        body: raw,
        redirect: "follow",
      };

      fetch("https://api.logsnag.com/v1/log", requestOptions)
        .then(response => response.text())
        .then(result => import("canvas-confetti"))
        .then(confetti =>
          confetti.default({
            particleCount: 100,
            spread: 70,
            origin: { y: 0.6 },
          })
        )
        .catch(error => console.log("error", error));
    });
</script>
<style>
  /* ===== Hero Section ===== */

  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #recent-posts {
    @apply py-6;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
